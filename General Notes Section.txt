General Notes Section

Loop Invariant :	a predicate (predicate - a sentence with some variable and when specific values are inserted in the var's place, 
					we get a statement) that is true at the start and the end of every iteration of the loop.

					Used to show the correctness of an algorithm. Three things need to be shown about a loop invariant :

					1. Initialization : the invariant is true before the first iteration of the loop
					2. Maintenance : It is true before every iteration of the loop (this means that it is also true after every iteration)
					3. Termination : When the loop terminates, the invariant gives us an useful property that helps show the correctness
									 of the algorithm


Analysis of Algorithm Efficiency 

1. Notation : 

	Definition : let f and g be a real-valued functions on the same domain of nonnegative real numbers.

	a) 	f is of order at least g, written f(x) is Omega(g(x)), if and only if, there exists a positive real number A and a nonnegative real number a
		such that :

			A|g(x)| <= |f(x)| , for all real numbers x > a

	b) 	f is of order at most g, written f(x) is O(g(x)), if, and only if, there exists a positive real number B and a nonnegative real number b
		such that : 

			B|g(x)| >= |f(x)| , for all real numbers x > b

	c) 	f is of order g, written f(x) is Theta(g(x)), if, and only if, there exist a positive real numbers A, B and a nonnegative real number c
		such that :

			A|g(x)| <= |f(x)| <= B|g(x)| , for all real numbers x > c

	Properties : 

	1. f(x) is Omega(g(x)) and f(x) is O(g(x)) if, and only if, f(x) is Theta(g(x))
	2. f(x) is Omega(g(x)) if, and only if, g(x) is O(f(x))
	3. if f(x) is O(g(x)) and g(x) is O(h(x)), then f(x) O(h(x))

2. Order of Power Functions : 

	Observe : 

		1. 1 < x 
		2. x < x^2  			#we multiply by x
		3. x < x^3				#multiply by x again

	This holds as we go on and so we can confirm the following generalization

		1. For any rational numbers r and s, if x > 1 and r < s, then x^r < x^s
		2. this means that x^r is O(x^s)
